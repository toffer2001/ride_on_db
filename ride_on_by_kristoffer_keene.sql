
DROP DATABASE ride_on_by_kristoffer_keene;          
CREATE DATABASE ride_on_by_kristoffer_keene;       	
USE ride_on_by_kristoffer_keene;					


CREATE TABLE SALES_REP
(SALES_PERSON_ID		NUMERIC(5)		NOT NULL,
SALES_PERSON_FNAME		VARCHAR(25)		NOT NULL,
SALES_PERSON_LNAME		VARCHAR(25)		NOT NULL,
PRIMARY KEY (SALES_PERSON_ID)
);

/*
ALTER TABLE SALES_REP
	ADD CONSTRAINT PK_SALES_PERSON_ID
		PRIMARY KEY (SALES_PERSON_ID);
*/

CREATE TABLE CUSTOMER
(CUSTOMER_NUMBER		VARCHAR(10)		NOT NULL,
CUSTOMER_FNAME			VARCHAR(25)		NOT NULL,
CUSTOMER_LNAME			VARCHAR(25)		NOT NULL,
PRIMARY KEY (CUSTOMER_NUMBER)
);

/*
ALTER TABLE CUSTOMER
	ADD CONSTRAINT PK_CUSTOMER_NUMBER
		PRIMARY KEY (CUSTOMER_NUMBER);
*/

CREATE TABLE SALES
(SALES_ID			NUMERIC(5)			NOT NULL,
SALES_QUOTA			NUMERIC(7)			NOT NULL,
FISCAL_YEAR			VARCHAR(4)			NOT NULL,
PRIOR_YEAR_SALES	NUMERIC(7)			NULL,
SALES_PERSON_ID		NUMERIC(5)			NOT NULL,
PRIMARY KEY (SALES_ID),
FOREIGN KEY (SALES_PERSON_ID)
        REFERENCES SALES_REP (SALES_PERSON_ID)
);

/*
ALTER TABLE SALES
	ADD CONSTRAINT PK_SALES_ID
		PRIMARY KEY (SALES_ID);
        
ALTER TABLE SALES
	ADD CONSTRAINT FK_SALES_PERSON_ID
		FOREIGN KEY (SALES_PERSON_ID)
        REFERENCES SALES_REP (SALES_PERSON_ID);
*/




CREATE TABLE SALES_ORDER
(SALES_ORDER_ID		NUMERIC(6)			NOT NULL,
ORDER_DATE			DATETIME			NOT NULL,
SALES_PERSON_ID		NUMERIC(5)			NOT NULL,
CUSTOMER_NUMBER		VARCHAR(10)			NOT NULL,
PRIMARY KEY (SALES_ORDER_ID),
FOREIGN KEY (SALES_PERSON_ID)
	REFERENCES SALES_REP (SALES_PERSON_ID),
FOREIGN KEY (CUSTOMER_NUMBER)
    REFERENCES CUSTOMER (CUSTOMER_NUMBER)

);

/*
ALTER TABLE SALES_ORDER
	ADD CONSTRAINT PK_SALES_ORDER_ID
		PRIMARY KEY (SALES_ORDER_ID);
       
ALTER TABLE SALES_ORDER
	ADD CONSTRAINT FK_SALES_PERSON_ID
		FOREIGN KEY (SALES_PERSON_ID)
        REFERENCES SALES_REP (SALES_PERSON_ID);
        
ALTER TABLE SALES_ORDER
	ADD CONSTRAINT FK_CUSTOMER_NUMBER
    FOREIGN KEY (CUSTOMER_NUMBER)
    REFERENCES CUSTOMER (CUSTOMER_NUMBER);
*/

 
CREATE TABLE PRODUCT
(PRODUCT_NUMBER		VARCHAR(10)			NOT NULL,
PRODUCT_NAME		VARCHAR(50)			NOT NULL,
UNIT_PRICE			NUMERIC(7, 4)		NOT NULL,
PRIMARY KEY (PRODUCT_NUMBER)
);

/*
ALTER TABLE PRODUCT
	ADD CONSTRAINT PK_PRODUCT_NUMBER
		PRIMARY KEY (PRODUCT_NUMBER);
*/


CREATE TABLE SALES_REASON_ORDER
(SALES_REASON_ORDER_ID	NUMERIC(5)			NOT NULL,
SALES_ORDER_ID			NUMERIC(6)			NOT NULL,
PRIMARY KEY (SALES_REASON_ORDER_ID, SALES_ORDER_ID),
FOREIGN KEY (SALES_ORDER_ID)
        REFERENCES SALES_ORDER (SALES_ORDER_ID)
);

/*
ALTER TABLE SALES_REASON_ORDER
	ADD CONSTRAINT PK_SALES_REASON_ORDER_ID
		PRIMARY KEY (SALES_REASON_ORDER_ID);

ALTER TABLE SALES_REASON_ORDER
	ADD CONSTRAINT PK_SALES_ORDER_ID
		PRIMARY KEY (SALES_ORDER_ID);

ALTER TABLE SALES_REASON_ORDER
	ADD CONSTRAINT FK_SALES_ORDER_ID
		FOREIGN KEY (SALES_ORDER_ID)
        REFERENCES SALES_ORDER (SALES_ORDER_ID);
*/


CREATE TABLE SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER	NUMERIC(2)	NOT NULL,
SALES_ORDER_ID					NUMERIC(6)	NOT NULL,
QUANTITY						NUMERIC(5)	NOT NULL,
PRODUCT_NUMBER					VARCHAR(10)	NOT NULL,
PRIMARY KEY (SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID),
FOREIGN KEY (SALES_ORDER_ID)
        REFERENCES SALES_ORDER (SALES_ORDER_ID),
FOREIGN KEY (PRODUCT_NUMBER)
        REFERENCES PRODUCT (PRODUCT_NUMBER)
);

/*
ALTER TABLE SALES_ORDER_DETAIL
	ADD CONSTRAINT PK_SALES_ORDER_DET_LINE_NUM
		PRIMARY KEY (SALES_ORDER_DETAIL_LINE_NUMBER);

ALTER TABLE SALES_ORDER_DETAIL
	ADD CONSTRAINT PK_SALES_ORDER_ID
		PRIMARY KEY (SALES_ORDER_ID);

ALTER TABLE SALES_ORDER_DETAIL
	ADD CONSTRAINT FK_SALES_ORDER_ID
		FOREIGN KEY (SALES_ORDER_ID)
        REFERENCES SALES_ORDER (SALES_ORDER_ID);

ALTER TABLE SALES_ORDER_DETAIL
	ADD CONSTRAINT FK_PRODUCT_NUMBER
		FOREIGN KEY (PRODUCT_NUMBER)
        REFERENCES PRODUCT (PRODUCT_NUMBER);
*/

CREATE TABLE SALES_REASON_DETAIL
(SALES_REASON_DETAIL_ID			NUMERIC(5)	NOT NULL,
SALES_REASON					VARCHAR(25)	NOT NULL,
PRIMARY KEY (SALES_REASON_DETAIL_ID),
FOREIGN KEY (SALES_REASON_DETAIL_ID)
        REFERENCES SALES_REASON_ORDER (SALES_REASON_ORDER_ID)
);

/*
ALTER TABLE SALES_REASON_DETAIL
	ADD CONSTRAINT PK_SALES_REASON_DET_ID
		PRIMARY KEY (SALES_REASON_DETAIL_ID);
        
ALTER TABLE SALES_REASON_DETAIL
	ADD CONSTRAINT FK_SALES_REASON_DET_ID
		FOREIGN KEY (SALES_REASON_DETAIL_ID)
        REFERENCES SALES_REASON_ORDER (SALES_REASON_ORDER_ID);
*/

-- Table SALES_REP
INSERT INTO SALES_REP
(SALES_PERSON_ID, SALES_PERSON_FNAME, SALES_PERSON_LNAME)
VALUES (1, 'Tete', 'Mensa-Annan');

INSERT INTO SALES_REP
(SALES_PERSON_ID, SALES_PERSON_FNAME, SALES_PERSON_LNAME)
VALUES (2, 'Jae', 'Pak');

INSERT INTO SALES_REP
(SALES_PERSON_ID, SALES_PERSON_FNAME, SALES_PERSON_LNAME)
VALUES (3, 'Lynn', 'Tsoflias');


-- Table CUSTOMER
INSERT INTO CUSTOMER
(CUSTOMER_NUMBER, CUSTOMER_FNAME, CUSTOMER_LNAME)
VALUES ('AW00029953', 'Joesph', 'Lique');

INSERT INTO CUSTOMER
(CUSTOMER_NUMBER, CUSTOMER_FNAME, CUSTOMER_LNAME)
VALUES ('AW00030112', 'Patricia', 'Vasquez');

INSERT INTO CUSTOMER
(CUSTOMER_NUMBER, CUSTOMER_FNAME, CUSTOMER_LNAME)
VALUES ('AW00029614', 'Ryan', 'Calafato');

INSERT INTO CUSTOMER
(CUSTOMER_NUMBER, CUSTOMER_FNAME, CUSTOMER_LNAME)
VALUES ('AW00030048', 'Marcia', 'Sultan');

INSERT INTO CUSTOMER
(CUSTOMER_NUMBER, CUSTOMER_FNAME, CUSTOMER_LNAME)
VALUES ('AW00030092', 'Gracia', 'Tuell');

INSERT INTO CUSTOMER
(CUSTOMER_NUMBER, CUSTOMER_FNAME, CUSTOMER_LNAME)
VALUES ('AW00015021', 'Michael', 'Jones');


-- Table SALES
INSERT INTO SALES
(SALES_ID, SALES_QUOTA, FISCAL_YEAR, PRIOR_YEAR_SALES, SALES_PERSON_ID)
VALUES (1, 300000, '2016', 0, 1);

INSERT INTO SALES
(SALES_ID, SALES_QUOTA, FISCAL_YEAR, PRIOR_YEAR_SALES, SALES_PERSON_ID)
VALUES (2, 250000, '2016', 1635823.3967, 2);

INSERT INTO SALES
(SALES_ID, SALES_QUOTA, FISCAL_YEAR, PRIOR_YEAR_SALES, SALES_PERSON_ID)
VALUES (3, 250000, '2016', 2278548.9776, 3);

INSERT INTO SALES
(SALES_ID, SALES_QUOTA, FISCAL_YEAR, PRIOR_YEAR_SALES, SALES_PERSON_ID)
VALUES (4, 200000, '2015', 0, 3);


-- Table SALES_ORDER
INSERT INTO SALES_ORDER
(SALES_ORDER_ID, ORDER_DATE, SALES_PERSON_ID, CUSTOMER_NUMBER)
VALUES (48001, '2016-11-01', 1, 'AW00029953');

INSERT INTO SALES_ORDER
(SALES_ORDER_ID, ORDER_DATE, SALES_PERSON_ID, CUSTOMER_NUMBER)
VALUES (48057, '2016-11-01', 1, 'AW00030112');

INSERT INTO SALES_ORDER
(SALES_ORDER_ID, ORDER_DATE, SALES_PERSON_ID, CUSTOMER_NUMBER)
VALUES (48750, '2016-01-01', 2, 'AW00029614');

INSERT INTO SALES_ORDER
(SALES_ORDER_ID, ORDER_DATE, SALES_PERSON_ID, CUSTOMER_NUMBER)
VALUES (47708, '2016-10-01', 2, 'AW00030048');

INSERT INTO SALES_ORDER
(SALES_ORDER_ID, ORDER_DATE, SALES_PERSON_ID, CUSTOMER_NUMBER)
VALUES (53565, '2016-09-01', 3, 'AW00030092');

INSERT INTO SALES_ORDER
(SALES_ORDER_ID, ORDER_DATE, SALES_PERSON_ID, CUSTOMER_NUMBER)
VALUES (35091, '2015-12-01', 3, 'AW00015021');


-- Table PRODUCT
INSERT INTO PRODUCT
(PRODUCT_NUMBER, PRODUCT_NAME, UNIT_PRICE)
VALUES ('FR-M94B-38', 'HL Mountain Frame - Black, 38', 736.1455);

INSERT INTO PRODUCT
(PRODUCT_NUMBER, PRODUCT_NAME, UNIT_PRICE)
VALUES ('FR-M63B-38', 'ML Mountain Frame - Black, 38', 209.256);

INSERT INTO PRODUCT
(PRODUCT_NUMBER, PRODUCT_NAME, UNIT_PRICE)
VALUES ('HL-U509', 'Sport-100 Helmet, Black', 20.1865);

INSERT INTO PRODUCT
(PRODUCT_NUMBER, PRODUCT_NAME, UNIT_PRICE)
VALUES ('HL-U509-B', 'Sport-100 Helmet, Blue', 20.1865);

INSERT INTO PRODUCT
(PRODUCT_NUMBER, PRODUCT_NAME, UNIT_PRICE)
VALUES ('HL-U509-R', 'Sport-100 Helmet, Red', 20.1865);


-- Table SALES_REASON_ORDER
INSERT INTO SALES_REASON_ORDER
(SALES_REASON_ORDER_ID, SALES_ORDER_ID)
VALUES (1, 35091);

INSERT INTO SALES_REASON_ORDER
(SALES_REASON_ORDER_ID, SALES_ORDER_ID)
VALUES (1, 47708);

INSERT INTO SALES_REASON_ORDER
(SALES_REASON_ORDER_ID, SALES_ORDER_ID)
VALUES (2, 47708);

INSERT INTO SALES_REASON_ORDER
(SALES_REASON_ORDER_ID, SALES_ORDER_ID)
VALUES (3, 53565);



-- Table SALES_ORDER_DETAIL
INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (1, 35091, 1, 'HL-U509-B');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (2, 35091, 1, 'FR-M63B-38');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (1, 47708, 3, 'FR-M94B-38');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (2, 47708, 3, 'FR-M63B-38');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (3, 47708, 9, 'HL-U509');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (4, 47708, 11, 'HL-U509-B');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (5, 47708, 5, 'HL-U509-R');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (1, 48001, 1, 'FR-M94B-38');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (2, 48001, 1, 'FR-M63B-38');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (3, 48001, 8, 'HL-U509');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (4, 48001, 8, 'HL-U509-B');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (5, 48001, 9, 'HL-U509-R');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (1, 48057, 4, 'HL-U509');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (2, 48057, 4, 'HL-U509-B');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (3, 48057, 6, 'HL-U509-R');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (1, 48750, 5, 'HL-U509');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (2, 48750, 6, 'HL-U509-B');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (3, 48750, 3, 'HL-U509-R');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (1, 53565, 5, 'HL-U509');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (2, 53565, 6, 'HL-U509-B');

INSERT INTO SALES_ORDER_DETAIL
(SALES_ORDER_DETAIL_LINE_NUMBER, SALES_ORDER_ID, QUANTITY, PRODUCT_NUMBER)
VALUES (3, 53565, 8, 'HL-U509-R');


-- Table SALES_REASON_DETAIL
INSERT INTO SALES_REASON_DETAIL
(SALES_REASON_DETAIL_ID, SALES_REASON)
VALUES (1, 'Price');

INSERT INTO SALES_REASON_DETAIL
(SALES_REASON_DETAIL_ID, SALES_REASON)
VALUES (2, 'On Promotion');

INSERT INTO SALES_REASON_DETAIL
(SALES_REASON_DETAIL_ID, SALES_REASON)
VALUES (3, 'Sponsorship');


-- How many customers do we have?
SELECT COUNT(customer_number) AS number_of_customers FROM customer;

-- What is the earliest sale?
SELECT MIN(order_date) AS earliest_sale FROM sales_order;
-- Another way to write the query:
-- SELECT order_date AS earliest_sale FROM sales_order ORDER BY order_date ASC LIMIT 1;

-- What is the latest sale?
SELECT MAX(order_date) AS latest_sale FROM sales_order;
-- Another way to write the query:
-- SELECT order_date AS latest_sale FROM sales_order ORDER BY order_date DESC LIMIT 1;

-- What is the date of the last sale by sales person?
SELECT 
sales_person_fname AS first_name, 
sales_person_lname AS last_name, 
MAX(order_date) AS last_sale 
FROM sales_rep 
JOIN sales_order ON sales_rep.sales_person_id = sales_order.sales_person_id 
GROUP BY sales_rep.sales_person_id 
ORDER BY sales_rep.sales_person_fname;

-- What is the sales total by Customer ordered Ascending on sales total?
SELECT 
a.customer_fname AS first_name, 
a.customer_lname AS last_name, 
SUM(d.unit_price*c.quantity) AS sales_total 
FROM customer a 
JOIN sales_order b ON a.customer_number = b.customer_number 
JOIN sales_order_detail c ON b.sales_order_id = c.sales_order_id 
JOIN product d ON c.product_number = d.product_number 
GROUP BY a.customer_number 
ORDER BY sales_total;

-- How many sales reasons does each sales order have? 
SELECT a.sales_order_id AS sales_order_id, count(c.sales_reason) AS count_of_sales_reasons 
FROM sales_order a 
LEFT JOIN sales_reason_order b ON a.sales_order_id = b.sales_order_id 
LEFT JOIN sales_reason_detail c ON b.sales_reason_order_id = c.sales_reason_detail_id 
GROUP BY a.sales_order_id 
ORDER BY a.sales_order_id;


/* queries
SELECT
   TABLE_NAME,
   CONSTRAINT_NAME,
   COLUMN_NAME,
   REFERENCED_COLUMN_NAME,
   REFERENCED_TABLE_NAME
FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
WHERE TABLE_SCHEMA = 'your_data_base_name_here'
ORDER BY TABLE_NAME,CONSTRAINT_NAME;
*/


